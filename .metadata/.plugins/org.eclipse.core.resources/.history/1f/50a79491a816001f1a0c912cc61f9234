package pack_for_Stack;

public class TestStack {

    class Stack {
        int stac[] = new int[10];
        int tos;

        // Initialize top of the stack
        Stack() {
            tos = -1;
        }

        // Push the item onto the stack
        void push(int item) {
            if (tos == 9)
                System.out.println("Stack is full");
            else {
                stac[++tos] = item;
            }
        }

        // Pop the item from the stack and return it
        int pop() {
            if (tos == -1) {
                System.out.println("Stack underflow");
                return -1;  // Return an error value or throw an exception
            } else {
                return stac[tos--];
            }
        }
    }

    public static void main(String[] args) {
        TestStack outer = new TestStack();
        Stack mystack1 = outer.new Stack();
        Stack mystack2 = outer.new Stack();

        // Push some numbers onto the stack
        for (int i = 0; i < 10; i++) {
            mystack1.push(i);
        }

        for (int i = 10; i < 20; i++) {
            mystack2.push(i);
        }

        // Pop the numbers from the stack
        System.out.println("Stack in myStack 1:");
        for (int i = 0; i < 10; i++) {
            System.out.println(mystack1.pop());
        }

        System.out.println("Stack in myStack 2:");
        for (int i = 0; i < 10; i++) {
            System.out.println(mystack2.pop());
        }
    }
}
